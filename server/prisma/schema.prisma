// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String?
  firstName     String?
  lastName      String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  carts         Cart[]
  orders        Order[]
}

// Product model
model Product {
  id            String    @id @default(cuid())
  name          String
  slug          String    @unique
  description   String?
  price         Float
  images        String[]
  stock         Int       @default(0)
  categoryId    String?
  category      Category?  @relation(fields: [categoryId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  cartItems     CartItem[]
  orderItems    OrderItem[]
  bestseller    Boolean   @default(false)
}

// Category model
model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  slug        String    @unique
  description String?
  parentId    String?
  parent      Category? @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children    Category[] @relation("CategoryHierarchy")
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Cart model
model Cart {
  id          String    @id @default(cuid())
  userId      String?
  user        User?     @relation(fields: [userId], references: [id])
  items       CartItem[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// CartItem model
model CartItem {
  id          String    @id @default(cuid())
  cartId      String
  cart        Cart      @relation(fields: [cartId], references: [id], onDelete: Cascade)
  productId   String
  product     Product   @relation(fields: [productId], references: [id])
  quantity    Int       @default(1)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Order model
model Order {
  id              String    @id @default(cuid())
  userId          String?
  user            User?     @relation(fields: [userId], references: [id])
  items           OrderItem[]
  status          OrderStatus @default(PENDING)
  total           Float
  shippingAddress String?
  paymentMethod   String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

// OrderItem model
model OrderItem {
  id          String    @id @default(cuid())
  orderId     String
  order       Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId   String
  product     Product   @relation(fields: [productId], references: [id])
  quantity    Int
  price       Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Enums
enum Role {
  ADMIN
  USER
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}
